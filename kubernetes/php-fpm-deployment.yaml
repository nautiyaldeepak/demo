---
apiVersion: v1
kind: ConfigMap
metadata:
  name: migration-script-config
  namespace: testing
data:
  migration-script.sh: |
    #!/bin/bash
    echo "Executing postStart script..."
    apt-get install curl -y
    cd /
    curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/arm64/kubectl"
    chmod +x /kubectl
    POD_NAME=$(/kubectl get pods -n testing | grep php-fpm | grep Running | awk '{print $1}')
    if [ -z "$POD_NAME" ]; then
        echo "null"
    else
        /kubectl cp $POD_NAME:/app/data/database.sqlite /app/data/database.sqlite -n testing
    fi

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: php-fpm-config
  namespace: testing
data:
  www.conf: |
    ; /etc/php/7.4/fpm/pool.d/www.conf

    ; a pool called www
    [symfony]
    user = www-data
    group = www-data

    ; use a unix domain socket
    ; listen = /var/run/php/php7.4-fpm.sock

    ; or listen on a TCP connection
    listen = 0.0.0.0:9000
    chdir = /app/public

    pm = static
    pm.max_children = 20

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: php-fpm-service-account
  namespace: testing

---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: php-fpm-role
  namespace: testing
rules:
- apiGroups: [""] # "" indicates the core API group
  resources: ["pods"]
  verbs: ["get", "watch", "list"]
- apiGroups: [""]
  resources: ["pods/exec"]
  verbs: ["create", "get", "list", "update"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: php-fpm-role-binding
  namespace: testing
subjects:
- kind: ServiceAccount
  name: php-fpm-service-account
  namespace: testing
roleRef:
  kind: Role
  name: php-fpm-role
  apiGroup: rbac.authorization.k8s.io

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: php-fpm
  namespace: testing
  labels:
    app: php-fpm
    layer: backend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: php-fpm
  template:
    metadata:
      labels:
        app: php-fpm 
    spec:
      serviceAccountName: php-fpm-service-account
      containers:
        - name: php-fpm
          image: public.ecr.aws/o6a6b5p9/application:php-fpm-v1
          ports:
            - containerPort: 9000
          volumeMounts:
          - name: php-fpm-config-volume
            mountPath: /etc/php/8.2/fpm/pool.d
          - name: migration-script-config-volume
            mountPath: /etc/config
          lifecycle:
            postStart:
              exec:
                command: ["/bin/bash", "/etc/config/migration-script.sh"]
      volumes:
      - name: php-fpm-config-volume
        configMap:
          name: php-fpm-config
      - name: migration-script-config-volume
        configMap:
          name: migration-script-config
---
kind: Service 
apiVersion: v1 
metadata:
  name: php-fpm
  namespace: testing
  labels:
    app: php-fpm
    layer: backend
spec:
  type: ClusterIP
  selector:
    app: php-fpm
  ports:
    - port: 9000
      targetPort: 9000
